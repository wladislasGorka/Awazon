services:
  backend:
    container_name: back
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    depends_on:
      mysql:
        condition: service_healthy
        restart: true
    # volumes:
    #   - ./backend:/app/backend
    ports:
      - "8000:8000"
    command: php -S 0.0.0.0:8000 -t public
    networks:
      - projettest
    develop:
      watch:
        - action: sync
          path: ./backend/
          target: /app/backend/
          ignore:
            - vendor/
 
  frontend:
    container_name: front
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    # volumes:
    #   - ./frontend:/app/frontend
    ports:
      - "8080:8080"
    command: npm run serve
    networks:
      - projettest
    develop:
      watch:
        - action: sync
          path: ./frontend/
          target: /app/frontend/
          ignore:
            - node_modules/
 
  mysql:
    image: mysql:latest
    container_name: testprojet
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      #DATABASE_URL="mysql://myuser:mypassword@mysql:3306/mydatabase""
    healthcheck:
          test: ["CMD", "mysqladmin", "ping", "-h", "mysql", "-u", "myuser", "--password=mypassword"]
          timeout: 20s
          retries: 10
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - projettest
 
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: db_manager
    environment:
      PMA_HOST: mysql
      PMA_USER: myuser
      PMA_PASSWORD: mypassword
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8081:80"
    networks:
      - projettest
 
volumes:
  mysql-data:
 
networks:
  projettest:
    name: testmonprojet
    driver: bridge