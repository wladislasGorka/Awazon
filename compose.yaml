services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: awazon-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/backend
    environment:
      APP_ENV: dev
      APP_DEBUG: '0'
      DATABASE_URL: "mysql://symfony_user:symfony_password@symfony-database:3306/symfony_db"
    depends_on:
      symfony-database:
        condition: service_healthy
    networks:
      - symfony_network
    command: ["symfony", "server:start", "--dir=/var/www/backend/public", "--port=8000", "--allow-all-ip"]
 
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: awazon-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - symfony_network
    command: ["npm", "start"]
 
  symfony-database:
    image: mysql:8.0
    container_name: symfony-database
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secure_root_password
      MYSQL_USER: ${MYSQL_USER:-symfony_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-symfony_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-symfony_db}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - symfony_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
 
  webdb:
      image: webdb/app
      container_name: awazon-db-manager
      restart: always
      extra_hosts:
        - "host.docker.internal:host-gateway"
      volumes:
        - "$HOME/.ssh:/root/.ssh:ro"
        - "$HOME/.webdb:/usr/src/app/static/version"
      ports:
        - "127.0.0.1:22071:22071"
      networks:
        - symfony_network
 
  webserver:
    image: nginx:latest
    container_name: nginx-server
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./backend:/var/www/backend
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - symfony_network
 
volumes:
  db_data:
 
networks:
  symfony_network:
    name: awazon_symfony_network
    driver: bridge